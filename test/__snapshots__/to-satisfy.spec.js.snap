// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`to-satisfy when it is a subtree fails when the actual does not the expected 1`] = `
"expected
<div class=\\"user\\">
  <h3 id=\\"name\\">Harriet</h3>
  <div id=\\"child\\">Foo</div>
</div>
to satisfy <User><div id=\\"child\\">Children</div></User>

<User>
  <div id=\\"child\\">
    Foo // -Foo
        // +Children
  </div>
</User>"
`;

exports[`to-satisfy when it is a subtree fails when the actual not matching the expected type 1`] = `
"expected
<div class=\\"user\\">
  <h3 id=\\"name\\">Harriet</h3>
  <div id=\\"child\\">Foo</div>
</div>
to satisfy <h3>Header</h3>

<User // should be <h3
>
  <div id=\\"child\\"> // wrapper should be removed
    Foo // -Foo
        // +Header
  </div> // wrapper should be removed
</User>"
`;

exports[`to-satisfy with the exhaustively flag fails when the actual does not match the expected 1`] = `
"expected
<div class=\\"user\\">
  <h3 id=\\"name\\">Harriet</h3>
  <div id=\\"child\\">Children</div>
</div>
to exhaustively satisfy <User><div id=\\"kids\\">Kids</div></User>

<User>
  <div id=\\"child\\" // expected 'child' to equal 'kids'
                  //
                  // -child
                  // +kids
  >
    Children // -Children
             // +Kids
  </div>
</User>"
`;

exports[`to-satisfy with the exhaustively flag when negated fails when actual is equal the expected 1`] = `
"expected
<div class=\\"user\\">
  <h3 id=\\"name\\">Harriet</h3>
  <div id=\\"child\\">Children</div>
</div>
not to exhaustively satisfy <User><div id=\\"child\\">Children</div></User>"
`;
